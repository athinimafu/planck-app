{"version":3,"sources":["src/main.js"],"names":["BrowserWindow","ipcMain","nativeTheme","dialog","app","Menu","MenuItem","globalShortcut","require","E","path","DirectoryActions","ModelProcess","menu","unhandled","logger","console","log","getPath","info","LanProcess","executable_path","replace","append","label","submenu","role","click","saveCurrentFile","ipcSend","mainWindow","SAVE_FILE","quit","PROJECT_TYPE","CURRENT_DIRECTORY","_PROJECTS","index","resolve","__dirname","currentMode","ProcessWindow","process_started","removeAllListeners","currentWindow","channel","data","Promise","undefined","error","webContents","send","AppSetUp","width","height","show","webPreferences","nodeIntegration","nodeIntegrationInSubFrames","nodeIntegrationInWorker","preload","join","contextIsolation","openDevTools","mode","loadFile","on","close","ProcessWindowSetup","indexpath","processData","x","y","PROCESS_STOPPED","RUN_GUI","UI_READY","e","from","createWindow","then","APP_STARTUP","once","_","themeSource","DIR_PRESENT","whenReady","register","process","platform","getAllWindows","length","handle","UI_MODE_TOGGLE","shouldUseDarkColors","present","currentDirectory","setBaseDir","newNode","OPEN_FILES_PRESENT","openFiles","all","Object","keys","map","file","sourceCode","readFromFile","NEW_FILE","filepath","writeToFile","NEW_FOLDER","createDir","type","dialogOptions","title","properties","filters","name","extensions","message","defaultPath","showOpenDialog","OPEN_DIR_PROMPT","projectType","canceled","filePaths","transformProject","project_init_complete","deps","getDependencies","PROJECT_DEP","OPEN_FILE","newlyCreated","code","update_file","lang","trim","updateCode","language","project","indexPath","guiStartup","catch","project_data","_dependencies","UPDATE_GUI","STOP_GUI"],"mappings":"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","sourcesContent":["const { BrowserWindow, ipcMain,nativeTheme,dialog,app,Menu,MenuItem,globalShortcut } = require(\"electron\")\r\nconst E = require(\"./events\");\r\nconst path = require('path');\r\nconst DirectoryActions  = require(\"./src/directoryActions\");\r\nconst ModelProcess = require(\"./src/languages\");\r\nconst menu = new Menu();\r\nconst unhandled = require(\"electron-unhandled\");\r\nconst logger = require(\"electron-log\");\r\n\r\nconsole.log(\" app data \",app.getPath(\"appData\"));\r\n\r\nlogger.info(\" file loaded \");\r\nlet LanProcess = null;\r\nconst executable_path = app.getPath(\"temp\").replace(/(temp|Temp)/g,'');\r\nlogger.log(\" path \",executable_path);\r\ntry {\r\nmenu.append(\r\n    new MenuItem({\r\n        label:'File',\r\n        submenu:[{\r\n            role:'fileMenu',\r\n            click:saveCurrentFile\r\n        }]\r\n    })\r\n)\r\n\r\n\r\nfunction saveCurrentFile() { ipcSend(mainWindow,E.SAVE_FILE); }\r\n\r\n\r\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\r\nif (require('electron-squirrel-startup')) { // eslint-disable-line global-require\r\n  app.quit();\r\n}\r\n\r\nlet PROJECT_TYPE;\r\nlet CURRENT_DIRECTORY;\r\n\r\nconst _PROJECTS = {\r\n    'html':{ \r\n        index:path.resolve(__dirname,\"./html-renderer.js/index.html\") \r\n    },\r\n    'javascript':{ \r\n        index:path.resolve(__dirname,\"./js-renderer.js/index.html\") \r\n    }\r\n}\r\n\r\nlet currentMode = \"\";\r\nlet mainWindow    = null;\r\nlet ProcessWindow = null;\r\nlet process_started = false;\r\n\r\n\r\napp.removeAllListeners('ready')\r\n\r\nconst ipcSend = (currentWindow,channel,data) => { \r\n    return new Promise(resolve => {\r\n        if (currentWindow == undefined) {\r\n            console.error(\" main window not yet defined\")\r\n            resolve(false);\r\n        }\r\n        else {\r\n            currentWindow.webContents.send(channel,data);\r\n            resolve(true);\r\n        }\r\n    })\r\n}\r\n\r\nconst AppSetUp = () => {\r\n    return new Promise(resolve => {\r\n        mainWindow = new BrowserWindow({\r\n            width: 1200,\r\n            height: 800,\r\n            show:false,\r\n            webPreferences:{ \r\n                nodeIntegration:true, \r\n                nodeIntegrationInSubFrames:true,\r\n                nodeIntegrationInWorker:true,\r\n                preload:path.join(__dirname,\"./preload-bundled.js\"),\r\n                contextIsolation:false\r\n            }\r\n        })\r\n        //open main window devtools.\r\n        mainWindow.webContents.openDevTools({ mode:\"detach\" });\r\n        //load file.\r\n        mainWindow.loadFile(path.resolve(__dirname,\"./index.html\"));\r\n        logger.info(\" application set up complete. \"); \r\n        mainWindow.on(\"close\",() => {\r\n            if (process_started) ProcessWindow.close();\r\n        })       \r\n        resolve();\r\n\r\n    })\r\n}\r\n\r\nconst ProcessWindowSetup = ({ indexpath,processData }) => {\r\n    return new Promise(async resolve => {\r\n        \r\n        ProcessWindow = new BrowserWindow({\r\n            width:600,\r\n            x:600,\r\n            y:0,\r\n            show:false,\r\n            webPreferences:{\r\n                nodeIntegration:true,\r\n                nodeIntegrationInSubFrames:true,\r\n                nodeIntegrationInWorker:true,\r\n                contextIsolation:false\r\n            }\r\n        })\r\n        //load file into process window.\r\n        await ProcessWindow.loadFile(indexpath)\r\n        \r\n        ProcessWindow.webContents.openDevTools({ mode:\"detach\" })\r\n     \r\n        ProcessWindow.on(\"close\",() => \r\n        {\r\n            ipcSend(mainWindow,E.PROCESS_STOPPED);\r\n        })\r\n\r\n        resolve(true); \r\n        process_started = true;\r\n        ipcSend(ProcessWindow,E.RUN_GUI,processData);    \r\n        ipcMain.on(E.UI_READY,(e,from) => {\r\n            if (from == \"process\") ProcessWindow.show()\r\n        } )\r\n    })\r\n}\r\n\r\n/** creatWindow function. */\r\nconst createWindow = () => {\r\n    // Create the browser window.\r\n\r\n    AppSetUp().then(() => {\r\n    //ipcSend functionality\r\n        ipcSend(mainWindow,E.APP_STARTUP,{}).then(() => {\r\n            logger.info(\" main window application startup begun. \");\r\n            //mainWindow.webContents.openDevTools({ mode:\"detach\" });\r\n            ipcMain.once(E.UI_READY,(_,mode) => {;\r\n                //set current mode;\r\n                currentMode = mode;\r\n                logger.info(\" ui ready. \");\r\n                nativeTheme.themeSource = mode;\r\n                // and load the index.html of the app.\r\n                // Open the DevTools.\r\n                //show user interface.\r\n                mainWindow.show();\r\n                ipcSend(mainWindow,E.DIR_PRESENT);\r\n            })\r\n        })\r\n    })\r\n};\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.once('ready', createWindow);\r\n\r\napp.whenReady().then(() => {\r\n    globalShortcut.register(\"Ctrl+S\",() => {\r\n        return saveCurrentFile();\r\n    })\r\n})\r\n\r\n// Quit when all windows are closed, except on macOS. There, it's common\r\n// for applications and their menu bar to stay active until the user quits\r\n// explicitly with Cmd + Q.\r\napp.on('window-all-closed', () => {\r\n  if (process.platform !== 'darwin') {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on('activate', () => {\r\n  // On OS X it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (BrowserWindow.getAllWindows().length === 0) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\n// In this file you can include the rest of your app's specific main process\r\n// code. You can also put them in separate files and import them here.\r\nipcMain.handle(E.UI_MODE_TOGGLE,(e) => {\r\n    //current mode\r\n    currentMode = currentMode == \"dark\"?\"light\":\"dark\";\r\n    //toggle native theme.\r\n    nativeTheme.themeSource = currentMode;  \r\n    //use of dark colors.\r\n    return nativeTheme.shouldUseDarkColors;\r\n})\r\n\r\nipcMain.on(E.DIR_PRESENT,(e,present) => {\r\n    CURRENT_DIRECTORY = present.currentDirectory;\r\n    PROJECT_TYPE = present.PROJECT_TYPE;\r\n    LanProcess = new ModelProcess(CURRENT_DIRECTORY,PROJECT_TYPE,executable_path);\r\n    LanProcess.setBaseDir(CURRENT_DIRECTORY);\r\n    //enable global shortcuts for new file creation and\r\n    //new directory creation\r\n    globalShortcut.register(\"Ctrl+n\",() => newNode('file'));\r\n    globalShortcut.register(\"Ctrl+d\",() => newNode('directory'));\r\n})\r\n\r\nipcMain.on(E.OPEN_FILES_PRESENT,async (e,openFiles) => \r\n{\r\n    await Promise.all(\r\n        Object.keys(openFiles).map(async file => {\r\n            let { path } = openFiles[file];\r\n            let sourceCode = '';\r\n            try {\r\n                sourceCode = await DirectoryActions.readFromFile(path);\r\n            }\r\n            catch(e) {}\r\n            openFiles[file].sourceCode = sourceCode;\r\n    }))\r\n\r\n    //send data over the main window.\r\n    ipcSend(mainWindow,E.OPEN_FILES_PRESENT,openFiles);\r\n})\r\n\r\nipcMain.on(E.NEW_FILE,async (e,filepath) => { \r\n   try {\r\n        await DirectoryActions.writeToFile(filepath,''); \r\n    }\r\n    catch(e) {\r\n        console.log(\" error occured \",e);\r\n        throw e;\r\n    }   \r\n})\r\nipcMain.on(E.NEW_FOLDER,async (e,filepath) => { \r\n    try {\r\n        await DirectoryActions.createDir(filepath);\r\n    }\r\n    catch(e) { \r\n        console.log(' error occured  in attempt to create new directory',e) \r\n        throw e;\r\n    }\r\n})\r\n\r\nasync function newNode(type) {\r\n    //user must choose directory in which new file will be based.\r\n    let dialogOptions = {\r\n        title:\"select directory\",\r\n            properties:['openDirectory'],\r\n            filters:{ name:\"All Files\",extensions:['*'] },\r\n            message:\"select directory\",\r\n            defaultPath:CURRENT_DIRECTORY\r\n        }\r\n        let data;\r\n        try {\r\n            data = await dialog.showOpenDialog(mainWindow,dialogOptions);\r\n        }\r\n        catch(e) { /* data not found. */throw e; }\r\n        switch(type) {\r\n            case 'file':ipcSend(mainWindow,E.NEW_FILE,data);\r\n                break;\r\n            case 'directory':\r\n                ipcSend(mainWindow,E.NEW_FOLDER,data);\r\n        }\r\n    }\r\n\r\n    ipcMain.handle(E.OPEN_DIR_PROMPT,(e,projectType) => {\r\n        //set project type.\r\n        PROJECT_TYPE = projectType;\r\n        let dialogOptions = {\r\n            title:\"select folder\",\r\n            properties:['openDirectory'],\r\n            filters:{ name:\"All Files\",extensions:['*'] },\r\n            message:\"select directory\"\r\n        }\r\n        return dialog.showOpenDialog(mainWindow,dialogOptions).then(async data => {\r\n            //once directory selected enable global shortcut for new file creation.\r\n            console.log(\" open directory data \",data);\r\n            globalShortcut.register(\"Ctrl+n\",() => newNode('file'));\r\n            //along with a global shortcut for new directory creation.\r\n            globalShortcut.register(\"Ctrl+d\",() => newNode(\"directory\"));\r\n            if (data.canceled) return data;\r\n            CURRENT_DIRECTORY = data.filePaths[0];\r\n            LanProcess = new ModelProcess(CURRENT_DIRECTORY,PROJECT_TYPE,executable_path);\r\n            console.log(\" process \",LanProcess);\r\n            switch(PROJECT_TYPE) {\r\n                case 'javascript':\r\n                    console.log(\" javascript process \");\r\n                    LanProcess.transformProject()\r\n                        .then(() => \r\n                        {\r\n                            console.log(\" project transformation. \");\r\n                            if (LanProcess.project_init_complete) {\r\n                                console.log(\" project complete \",LanProcess.project_init_complete);\r\n                                let deps = LanProcess.getDependencies();\r\n                                //send project dependencies to main window.\r\n                                ipcSend(mainWindow,E.PROJECT_DEP,deps);\r\n                            }\r\n                        })\r\n                    break;\r\n            }\r\n            return data;\r\n        });\r\n    })\r\n\r\n\r\n    ipcMain.handle(E.OPEN_FILE,async (e,{ filepath,newlyCreated }) => {\r\n        //console.log(\" filepath obtained \",filepath);\r\n        let code;\r\n        try {\r\n            code = await DirectoryActions.readFromFile(filepath);\r\n        }\r\n        catch(e) {\r\n            code = newlyCreated ? '':`ERR:404\\nFile not found :/`;\r\n            throw e;\r\n        }\r\n        code = code.replace(';','\\n');\r\n        return code;\r\n    })\r\n\r\n    //in the instance where updated source code is to be saved.\r\n    ipcMain.on(E.SAVE_FILE,async (e,{filepath,sourceCode,update_file,lang }) => \r\n    {\r\n        try \r\n        {\r\n            //write the updated code to the filesystem.\r\n            await DirectoryActions.writeToFile(filepath.trim(),sourceCode);\r\n        }\r\n        catch(e) { throw e; }\r\n        console.log(\" written to successfully \");\r\n        if ( update_file ) await LanProcess.updateCode({ sourceCode,path:filepath,language:lang })\r\n    })\r\n\r\n    //in the instance when the user wishes to run the rendered gui of the\r\n    //code they're editing.\r\n    ipcMain.on(E.RUN_GUI,async (e,{ filepath,project,sourceCode }) => \r\n    {\r\n        let indexPath;\r\n        switch(project) {\r\n        case 'html':\r\n            indexPath = _PROJECTS[project];\r\n            console.log(\" indexPath \",indexPath);\r\n            //set up of the process window.\r\n            return ProcessWindowSetup({ indexpath:indexPath.index,processData:{ sourceCode,filepath } });\r\n        case 'javascript':\r\n            indexPath = _PROJECTS[project]; \r\n            return LanProcess.guiStartup()\r\n                .catch(e => {\r\n                    console.log(' error occured ',e);\r\n                    return;\r\n                })\r\n                .then(async project_data => {\r\n                    if ( LanProcess.project_init_complete ) {\r\n                        //javascript process dependencies.\r\n                        let _dependencies = LanProcess.getDependencies();\r\n\r\n                        ipcSend(mainWindow,E.PROJECT_DEP,_dependencies)\r\n                        //return process window setup.console.log(\" javascript index path \",indexPath);\r\n                        return ProcessWindowSetup({ \r\n                            indexpath:indexPath.index,processData:project_data\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n    })\r\n\r\n    //in the instance when the gui is to be automatically updated\r\n    ipcMain.on(E.UPDATE_GUI,async (e,{ sourceCode,path,lang }) => {\r\n        //we send updated source code to the renderer process of the gui.\r\n        if (PROJECT_TYPE == 'javascript') {\r\n            console.log(\" project type is javascript\");\r\n            try {\r\n                sourceCode = await LanProcess.updateCode({ sourceCode,path,language:lang });\r\n            }\r\n            catch(e) { /** source code unable to be updated. */throw e; }\r\n        }\r\n        ipcSend(ProcessWindow,E.UPDATE_GUI,{ sourceCode,path,lang });\r\n    })\r\n\r\n    //in the instance when the gui process is requested to be stoppped.\r\n    ipcMain.on(E.STOP_GUI,() => \r\n    {\r\n        try {\r\n            ProcessWindow.close();\r\n            process_started = false;\r\n        }\r\n        catch(e) { /* process window no longer runnnig*/throw e; }\r\n    })\r\n}\r\ncatch(e) {\r\n    logger.error(e);\r\n    throw e;\r\n}\r\nunhandled();"],"file":"main.js"}