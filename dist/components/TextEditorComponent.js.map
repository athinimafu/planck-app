{"version":3,"sources":["../../src/components/TextEditorComponent.js"],"names":["types","JsIcon","HtmlIcon","JsonIcon","CssIcon","OpenFilesComponent","showFile","closeFile","openFiles","currentFile","FileComponents","Object","keys","map","filename","index","file","onDisplay","isCurrent","filepath","path","sourceCode","prevOpenFilePath","onClose","FileIcon","fileType","Icon","isSaved","CancelIcon","className","propTypes","PropTypes","func","object","string","TextEditor","saveFile","editFile","data","isNew","runProjectRendering","isRunning","stopRenderering","project","name","console","log","updateGUI","dependencies","includes","onClick","e","update_code","lang","runFile","projecttype","type","stopFile","code","document","getElementById","window","value","onEdit","E","doc","Doc","FuncIcon","UnSaved","bool","updateProjectRendering","time","number"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport JsIcon from \"../icons/javascript.jsx\";\r\nimport CssIcon from \"../icons/CssIcon.jsx\";\r\nimport HtmlIcon from \"../icons/HtmlIcon.jsx\";\r\nimport JsonIcon from \"../icons/JsonIcon.jsx\";\r\nimport SaveIcon from \"../icons/Saved.jsx\";\r\nimport UnSavedIcon from \"../icons/UnSaved.jsx\";\r\nimport RunIcon  from \"../icons/runFile.jsx\";\r\nimport CancelIcon from \"../icons/CancelIcon.jsx\";\r\n\r\nconst types ={ 'javascript':JsIcon,'html':HtmlIcon,'json':JsonIcon,'css':CssIcon };\r\n\r\nconst OpenFilesComponent = ({ showFile,closeFile,openFiles,currentFile }) => {\r\n    const FileComponents = Object.keys(openFiles).map((filename,index) => \r\n    {\r\n        let file = openFiles[filename];\r\n        //onclick function displays file contents when file name is clicked on.\r\n        const onDisplay = () => \r\n        { \r\n            //if file is already the current file do not proceed further.\r\n            return file.isCurrent || \r\n                showFile({ \r\n                    filepath:file.path,\r\n                    sourceCode:file.sourceCode,\r\n                    prevOpenFilePath:currentFile \r\n                }); \r\n        }\r\n        const onClose = () => {\r\n            //in the event that user wishes to close the file.\r\n            return closeFile(filename);\r\n        }\r\n        let FileIcon = types[file.fileType] || (() => { return ''; });\r\n        let Icon = file.isSaved ? CancelIcon : () => { return ''; };\r\n\r\n        //let trunc = filename.length > 15 ? `${filename.substring(0,15)}...`:filename;\r\n\r\n        let className = file.isCurrent ? 'dashboard-file-name-current':'dashboard-file-name';\r\n        return (\r\n            <div className={className} onClick={onDisplay} key={`${filename}-${index}`}> \r\n                <FileIcon \r\n                    className=\"file-icon\" \r\n                    key={`${filename}-${file.fileType}-${index}`} />\r\n                <span className=\"string-file-name\" >{ filename }</span>\r\n                <Icon className='file-icon' key={`${filename}-${index}-icon`}  onClick={onClose} />\r\n            </div>\r\n        );\r\n    })\r\n    return (\r\n        <div className=\"file-dashboard \"> { FileComponents } </div>\r\n    )\r\n}\r\nOpenFilesComponent.propTypes = {\r\n    showFile:PropTypes.func,\r\n    openFiles:PropTypes.object,\r\n    closeFile:PropTypes.func,\r\n    currentFile:PropTypes.string\r\n}\r\n\r\nconst TextEditor = ({ saveFile,currentFile,editFile,data,isNew,runProjectRendering,isRunning,showFile,openFiles,closeFile,stopRenderering,project }) => {\r\n    let { sourceCode,path,name,fileType,isSaved } = data;\r\n    console.log(\" dependency path \",path);\r\n    let updateGUI = (isRunning && project.dependencies.includes(path));\r\n    let FileIcon =  types[fileType] || (() => { return ''; })\r\n    let onClick = (e) => { \r\n        console.log(\" current source code \",sourceCode);\r\n        return saveFile({ filepath:path,sourceCode,update_code:updateGUI,lang:fileType }); \r\n    }\r\n\r\n    let runFile = e => {\r\n        return runProjectRendering({\r\n            filepath:path,\r\n            projecttype:project.type,\r\n            sourceCode,\r\n            filename:name\r\n        });\r\n    }\r\n    let stopFile = e => { return stopRenderering(); }\r\n\r\n    if (isNew) {\r\n        let code = document.getElementById(\"code\");\r\n        window.code = code;\r\n        if (code)  document.getElementById('code').value = sourceCode;\r\n    }\r\n\r\n    //onEdit function for when code is manipulated.\r\n    let onEdit = (e) => {\r\n        window.E = e;\r\n        let doc = document.getElementById('code');\r\n        window.Doc = doc;\r\n        console.log(\" gui running \",updateGUI);\r\n        return editFile({ sourceCode:doc.value,isRunning:updateGUI });\r\n    }\r\n\r\n    let FuncIcon = isRunning ? \r\n        <span className=\"file-stop\" onClick={stopFile} > \r\n            <CancelIcon className=\"cancel-icon\"/> stop child process.\r\n        </span>\r\n        :<span className=\"file-run\" onClick={runFile} > <RunIcon className=\"run-icon\"/> run file </span>\r\n\r\n    //maintain automatic updating of gui when changes are made.\r\n    let UnSaved  = isSaved ?  '':<UnSavedIcon className=\"unsaved-icon\" key=\"unsaved-icon\" />\r\n    return (\r\n        <div className=\"text-editor\" >\r\n            <div className=\"col-md-12 file-data\">\r\n                <span className=\"file-name \"> { name }{ UnSaved } </span>\r\n                <span className=\"file-type \"> <FileIcon className=\"file-icon\"/> file type { fileType } </span>\r\n                <span className=\"file-button\" onClick={onClick}  > \r\n                    <SaveIcon className=\"save-icon\"  autoFocus={false} />\r\n                    save file.\r\n                </span>\r\n                { FuncIcon }\r\n            </div>\r\n            <OpenFilesComponent \r\n                showFile={showFile} \r\n                openFiles={openFiles} \r\n                closeFile={closeFile} currentFile={ currentFile } />\r\n            <hr className=\"horizontal\" />\r\n            <div className=\"col-md-12 text-editor\">\r\n                <textarea id=\"code\" \r\n                    spellCheck={false} \r\n                    autoFocus={false} \r\n                    onInput={onEdit}\r\n                    //onKeyDown={onEdit}\r\n                    data-source={sourceCode} \r\n                    defaultValue={sourceCode} ></textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nTextEditor.propTypes = {\r\n    data:PropTypes.object,\r\n    saveFile:PropTypes.func,\r\n    editFile:PropTypes.func,\r\n    isNew:PropTypes.bool,\r\n    project:PropTypes.object,\r\n    runProjectRendering:PropTypes.func,\r\n    updateProjectRendering:PropTypes.func,\r\n    isRunning:PropTypes.bool,\r\n    time:PropTypes.number,\r\n    currentFile:PropTypes.string,\r\n    showFile:PropTypes.func,\r\n    closeFile:PropTypes.func,\r\n    openFiles:PropTypes.object,\r\n    stopRenderering:PropTypes.func\r\n}\r\nexport default TextEditor;"],"file":"TextEditorComponent.js"}