{"version":3,"sources":["../../src/components/TextEditorComponent.js"],"names":["types","JsIcon","HtmlIcon","JsonIcon","CssIcon","TextEditor","saveFile","data","sourceCode","path","fileType","FileIcon","undefined","onClick","propTypes","PropTypes","string","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,KAAK,GAAE;AAAE,gBAAaC,mBAAf;AAAsB,UAAOC,iBAA7B;AAAsC,UAAOC,iBAA7C;AAAsD,SAAMC;AAA5D,CAAb;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACtC;AACA,MAAI;AAAEC,IAAAA,UAAF;AAAaC,IAAAA,IAAb;AAAkBC,IAAAA;AAAlB,MAA+BH,IAAnC;AACA,MAAII,QAAQ,GAAGX,KAAK,CAACU,QAAD,CAAL,IAAmBE,SAAnB,GAAgCZ,KAAK,CAACU,QAAD,CAArC,GAAkD,MAAM;AAAE,WAAO,EAAP;AAAY,GAArF;;AACA,MAAIG,OAAO,GAAG,CAAC;AAAEL,IAAAA,UAAF;AAAaC,IAAAA;AAAb,GAAD,KAAyB;AAAE,WAAOH,QAAQ,CAACE,UAAD,EAAYC,IAAZ,CAAf;AAAmC,GAA5E;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAM,IAAA,SAAS,EAAC;AAAhB,UAAwCA,IAAxC,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC;AAAhB,uBAAyC,6BAAC,QAAD;AAAU,IAAA,SAAS,EAAC;AAApB,IAAzC,iBAAuFC,QAAvF,MAFJ,eAGI;AAAM,IAAA,SAAS,EAAC;AAAhB,kBACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEG;AAA7C,oBADJ,CAHJ,CADJ,eAQI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,mBAAaL;AAA7B,UAA4CA,UAA5C,CADJ,CARJ,CADJ;AAcH,CAnBD;;AAoBAH,UAAU,CAACS,SAAX,GAAuB;AACnBN,EAAAA,UAAU,EAACO,mBAAUC,MADF;AAEnBT,EAAAA,IAAI,EAACQ,mBAAUE;AAFI,CAAvB;eAIeZ,U","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport JsIcon from \"/home/uncle-shaggy/programs/projects/planck/planck_app/dist/icons/javascript.jsx\";\nimport CssIcon from \"/home/uncle-shaggu/programs/projects/planck/planck_app/dist/icons/CssIcon.jsx\";\nimport HtmlIcon from \"home/uncle-shaggy/programs/projects/planck/planck_app/dist/icons/HtmlIcon.jsx\";\nimport JsonIcon from \"home/uncle-shaggy/programs/projects/planck/planck_app/dist/icons/JsonIcon.jsx\";\n\nconst types ={ 'javascript':JsIcon,'html':HtmlIcon,'json':JsonIcon,'css':CssIcon };\n\nconst TextEditor = ({ saveFile,data }) => {\n    //let className = full ? \"col-md-12\":\"\"\n    let { sourceCode,path,fileType } = data;\n    let FileIcon = types[fileType] != undefined ?  types[fileType] : () => { return ''; }\n    let onClick = ({ sourceCode,path }) => { return saveFile(sourceCode,path); }\n    return (\n        <div className=\"col-md-8\" >\n            <div className=\"col-md-12 file-data\">\n                <span className=\"file-name col-md-6\"> { path }</span>\n                <span className=\"file-type offset-md-3\"> <FileIcon className=\"file-icon\"/> file type { fileType } </span>\n                <span className=\"offset-md-9\"> \n                    <button className=\"save-button btn\" onClick={onClick} > save file. </button> \n                </span>\n            </div>\n            <div className=\"col-md-12 text-editor\">\n                <code id=\"code\" data-source={sourceCode} > {sourceCode}</code>\n            </div>\n        </div>\n    )\n}\nTextEditor.propTypes = {\n    sourceCode:PropTypes.string,\n    data:PropTypes.object\n}\nexport default TextEditor;"],"file":"TextEditorComponent.jsx"}