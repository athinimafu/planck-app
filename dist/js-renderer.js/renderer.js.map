{"version":3,"sources":["../../src/js-renderer.js/renderer.js"],"names":["ipcRenderer","require","E","prettier","writeFile","promises","_path","ReactDOM","react","JSDependencies","ROOT_CONTAINER","CONTAINER_TYPE","prettify","sourceCode","format","parser","findDependants","currentData","dependants","curIndex","currentPath","comp","Object","keys","window","_$JSdependencies","index","dep","includes","push","findRoot","path","root","variableName","updateComp","console","log","updateJSProcess","data","ScriptElement","document","getElementById","remove","newScriptElement","createElement","id","type","text","htmlParentContainer","getElementsByTagName","appendChild","map","_$ParentScope","setHtmlCode","html","header","body","innerHTML","_fetchVariableName","_var","depPath","split","length","replace","_mapJSDependencies","dependencies","_dep","i","setReport","report","abspath","resolve","encoding","setJSDependencies","dependencyMap","varName","depCon","child","setCSSDependencies","cssDependencyMap","csspath","StyleElement","textContent","on","RUN_GUI","e","projectData","js","css","info","name","send","UI_READY","UPDATE_GUI"],"mappings":"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","sourcesContent":["/** javascript sub process renderer.js handles frontend manipulation of code recieved from the\n * main process.\n  */\nconst { ipcRenderer } = require('electron');\nconst E = require('../events');\nconst prettier = require(\"prettier\");\nconst { writeFile } = require(\"fs\").promises;\nconst _path = require(\"path\");\nconst ReactDOM = require(\"react-dom\");\nconst react = require('react');\n\nlet JSDependencies = {};\n\nlet ROOT_CONTAINER = '';\nlet CONTAINER_TYPE = '';\n\n/** prettier functionality ensures code is properly indented.\n * @param {String} sourceCode argument containing source code.\n * @returns {String} prettified source code.\n */\nfunction prettify(sourceCode) {\n    return prettier.format(sourceCode,{ parser:\"babel\" });\n}\n\n/**\n * ************************************************************************************************\n * recursive functionality which determines all the components which depend on the updated \n * component whether directly or indirectly.\n * @param currentData data about the current component.\n * @param dependants array of components which depend on updated component.\n * ************************************************************************************************\n */\nfunction findDependants(currentData,dependants)\n{\n    let { curIndex,currentPath } = currentData;\n    for (let comp of Object.keys(window._$JSdependencies)) {\n        let { index,dep } = window._$JSdependencies[comp];\n        if (index <= curIndex) continue;\n        if ( dep.includes(currentPath) ) {\n            dependants.push(comp);\n            findDependants({ curIndex:index,currentPath:comp },dependants)\n        }\n    }\n}\n\n/**\n * ************************************************************************************************\n * functionality determines the name of the root component\n * @returns variable name of root component.\n * ************************************************************************************************\n */\nfunction findRoot()\n{\n    for (let path of Object.keys(window._$JSdependencies)) {\n        let { root,index,variableName } = window._$JSdependencies[path];\n        if (!root && index == 0) return variableName; \n    }\n}\n\n/**\n * ************************************************************************************************\n * functionality which updates component code by re executing function scope code.\n * @param variableName name of variable being updated.\n * @returns promise object which resolves if function is executed and rejects otherwise.\n * ************************************************************************************************\n */\nfunction updateComp(variableName) {\n    console.log(\" current variable \",variableName);\n    window[`_$${variableName}Scope`]();\n}\n\n/**\n * ************************************************************************************************\n * functionality updates javascript process by updating the code of the relevant component\n * updating that component and then updating the root component and rendering it again.\n * ************************************************************************************************\n */\nfunction updateJSProcess(data) {\n    let { sourceCode,path } = data;\n\n\n    const { index,variableName } = window._$JSdependencies[path];\n    window[`_$${variableName}Scope`] = null;                              // set previous variable scope to nothing\n\n    const ScriptElement = document.getElementById(path);\n    //set source code of script element.\n    ScriptElement.remove();\n    const newScriptElement = document.createElement('script');\n    newScriptElement.id = path;\n    newScriptElement.type = 'text/javascript';\n    newScriptElement.text = sourceCode;\n    const htmlParentContainer = document.getElementsByTagName(\"html\")[0];\n\n    htmlParentContainer.appendChild(newScriptElement);\n\n    console.log(\" varaible scope \",window[`_$${variableName}Scope`]);\n    let dependants = [];\n    findDependants({ curIndex:index,currentPath:path },dependants);       // determine all the dependants which require the updated component.\n\n    //loop through all the components that require to be updated and update them.\n    [ variableName,...dependants ].map(updateComp);\n\n    //evaluate the parent scope .\n    window._$ParentScope();\n}\n\nfunction setHtmlCode({ sourceCode }) {\n    //set header data\n    let html = document.getElementsByTagName('html')[0];\n    //console.log(\" html \",html.innerHTML);\n    let { header,body } = sourceCode;\n    document.getElementById('head').innerHTML = header;\n    console.log(\" body \",body);\n    html.innerHTML += body;\n}\n\nfunction _fetchVariableName({_var,depPath }) {\n    return _var || depPath.split('/')[depPath.split('/').length-1].replace('.js','');\n}\n\n/** converts javascript object of dependencies to array.\n * @param {*} dependencies object containg script elements of dependencies.\n*/\nfunction _mapJSDependencies(dependencies) \n{\n    let _dep = [];\n    for (let index of Object.keys(dependencies) ) {\n        let i = (Object.keys(dependencies).length-1)-index;\n        _dep[i] = dependencies[index];\n    }\n    return _dep;\n}\n\nfunction setReport(report) {\n    let abspath = _path.resolve(\"\",\"./report.js\")\n    return writeFile(abspath,report,{ encoding:\"utf8\" });\n}\n\n/**\n * Functionality that takes Javascript dependencies and creates script elements\n * which are added to the html source code.\n * @param {*} dependencyMap -> object containing source Code of dependencies\n * and meta-data.\n */\nfunction setJSDependencies(dependencyMap) \n{\n    const htmlParentContainer = document.getElementsByTagName('html')[0];\n    window._$JSdependencies = {};\n    console.log(\" current dependency map(1) \",dependencyMap);\n    for (let depPath of Object.keys(dependencyMap)) {\n        //obtain dependency data.\n        let { sourceCode,index,dependencies,path,variableName,root } = dependencyMap[depPath];\n        window._$JSdependencies[path] = {  index,dep:dependencies,variableName,root };\n        const varName = _fetchVariableName({ _var:dependencyMap[depPath].variableName,depPath });\n\n        window.dependencies = dependencyMap;\n        let ScriptElement = document.createElement('script');\n        ScriptElement.type = 'text/javascript';\n        ScriptElement.id = `${depPath}`;\n        window[`map${varName}`] = sourceCode;\n        if (depPath.includes(\"Numbers\")) { setReport(prettify(sourceCode));  }\n        ScriptElement.text = prettify(sourceCode);\n        if (JSDependencies[index]) {\n            JSDependencies[index].push(ScriptElement);\n        }\n        else {\n            JSDependencies[index]  = [ ScriptElement ];\n        }\n    }\n    let depCon = _mapJSDependencies(JSDependencies);\n    //obtain the JsDependencyContainer;\n    console.log(\" javascript dependencies \",JSDependencies);\n    for (let i = 0;i < depCon.length;i++) { \n        for (let child of depCon[i]) {\n            console.log(\" --current child \",child);\n            htmlParentContainer.appendChild(child);\n        }\n    }\n}\n\nfunction setCSSDependencies(cssDependencyMap) \n{\n    const htmlParentContainer = document.getElementsByTagName('html')[0];\n    for (let csspath of Object.keys(cssDependencyMap))  {\n        let StyleElement = document.createElement('style');\n        StyleElement.id  = csspath;\n        StyleElement.textContent = cssDependencyMap[csspath];\n        //add css style element to container.\n        htmlParentContainer.appendChild(StyleElement);\n    }\n}\n\n//in the event of gui is being run.\nipcRenderer.on(E.RUN_GUI,(e,projectData) => {\n    //set html code.\n    console.log(\" project data \",projectData);\n    setHtmlCode(projectData)\n    //set javascript dependencies.console.log(\"code \",document.querySelector(\"#code\"));\n    let { js,css,info } = projectData.dependencyMap;\n    ROOT_CONTAINER = info.name;\n    CONTAINER_TYPE = info.type;\n    setJSDependencies(js);\n    //set css dependencies.\n    setCSSDependencies(css);\n    ipcRenderer.send(E.UI_READY,'process');\n    \n})\n\n//in the event that code is being updated.\nipcRenderer.on(E.UPDATE_GUI,(e,data) => {\n    let { sourceCode,path } = data;\n    let type = CONTAINER_TYPE == \"ID\" ? \"#\":\"./\";\n    \n    updateJSProcess(data);\n    \n    /*try {\n        ReactDOM.render(window._$TopLevelAppComponent,document.querySelector(`${type}${ROOT_CONTAINER}`));\n    }\n    catch(e) {\n        console.log(\" error obtained \",e);\n    }*/\n\n})\n"],"file":"renderer.js"}