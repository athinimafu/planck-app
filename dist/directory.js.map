{"version":3,"sources":["../src/directory.js"],"names":["readdir","readFile","require","promises","_path","SUPPORTED_TYPES","nodes","Directory","readDirectory","current_node","children","e","Promise","all","map","child","resolve","dirFormat","grandChildren","parent_node","numOfChildren","Object","keys","length","isdir","path","isExpanded","fileFormat","fileType","extname","sourceCode","open","mapDirectory","directChildren","directory","f","replace","undefined","openDirectory","directory_path","console","log","window","readFromFile","filepath","encoding","closeDirectory","module","exports"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA,OAAF;AAAUC,EAAAA;AAAV,IAAuBC,OAAO,CAAC,IAAD,CAAP,CAAcC,QAA3C;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAC,MAAD,CAArB;;AACA,MAAMG,eAAe,GAAG;AAAE,SAAM,YAAR;AAAqB,WAAQ,MAA7B;AAAoC,UAAO,KAA3C;AAAiD,WAAQ;AAAzD,CAAxB;AACA,IAAIC,KAAK,GAAG,EAAZ;AAEA,MAAMC,SAAS,GAAG;AACdD,EAAAA,KADc;;AAEd,QAAME,aAAN,CAAoBC,YAApB,EAAkC;AAC9B,QAAIC,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMV,OAAO,CAACS,YAAD,CAAxB;AACH,KAFD,CAGA,OAAME,CAAN,EAAS;AACL;AACA;AACA;AACH,KAT6B,CAU9B;;;AACA,SAAKL,KAAL,CAAWG,YAAX,IAA2BC,QAA3B;AACA,UAAME,OAAO,CAACC,GAAR,CACFH,QAAQ,CAACI,GAAT,CAAa,MAAMC,KAAN,IAAe;AAC5B,YAAM,KAAKP,aAAL,CAAmBJ,KAAK,CAACY,OAAN,CAAcP,YAAd,EAA2BM,KAA3B,CAAnB,CAAN;AACC,KAFD,CADE,CAAN;AAKH,GAnBa;;AAoBdE,EAAAA,SAAS,CAACC,aAAD,EAAeC,WAAf,EAA4B;AACjC,WAAO;AACHT,MAAAA,QAAQ,EAACQ,aADN;AAEHE,MAAAA,aAAa,EAACC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,MAFtC;AAGHC,MAAAA,KAAK,EAAC,IAHH;AAIHC,MAAAA,IAAI,EAACN,WAJF;AAKHO,MAAAA,UAAU,EAAC;AALR,KAAP;AAOH,GA5Ba;;AA6BdC,EAAAA,UAAU,CAACR,WAAD,EAAaJ,KAAb,EAAoB;AAC1B,WAAO;AACHS,MAAAA,KAAK,EAAC,KADH;AAEHC,MAAAA,IAAI,EAACN,WAFF;AAGHS,MAAAA,QAAQ,EAACvB,eAAe,CAACD,KAAK,CAACyB,OAAN,CAAcd,KAAd,CAAD,CAHrB;AAIHe,MAAAA,UAAU,EAAC,EAJR;AAKHC,MAAAA,IAAI,EAAC;AALF,KAAP;AAOH,GArCa;;AAsCdC,EAAAA,YAAY,CAACb,WAAD,EAAc;AACtB;AACA,QAAIc,cAAc,GAAG,KAAK3B,KAAL,CAAWa,WAAX,CAArB;AACA,QAAIe,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAInB,KAAT,IAAkBkB,cAAlB,EAAkC;AAC9B,UAAIE,CAAC,GAAG/B,KAAK,CAACY,OAAN,CAAcG,WAAd,EAA0BJ,KAA1B,EAAiCqB,OAAjC,CAAyC,GAAzC,EAA6C,EAA7C,CAAR,CAD8B,CAE9B;;;AACA,UAAI,KAAK9B,KAAL,CAAW6B,CAAX,KAAiBE,SAArB,EAAgC;AAC5BH,QAAAA,SAAS,CAACnB,KAAD,CAAT,GAAoB,KAAKE,SAAL,CAAe,KAAKe,YAAL,CAAkBG,CAAlB,CAAf,EAAoChB,WAApC,CAApB;AACH,OAFD,MAGK;AACDe,QAAAA,SAAS,CAACnB,KAAD,CAAT,GAAmB,KAAKY,UAAL,CAAgBR,WAAhB,EAA4BJ,KAA5B,CAAnB;AACH;AACJ;;AACD,WAAOmB,SAAP;AACH,GArDa;;AAsDd;AACAI,EAAAA,aAAa,CAACC,cAAD,EAAiB;AAC1B,WAAO,IAAI3B,OAAJ,CAAY,MAAMI,OAAN,IAAiB;AAChC,UAAI;AACA,cAAM,KAAKR,aAAL,CAAmB+B,cAAnB,CAAN;AACH,OAFD,CAGA,OAAM5B,CAAN,EAAS,CAAE;;AACX6B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKnC,KAAnC;AACAoC,MAAAA,MAAM,CAACpC,KAAP,GAAgB,KAAKA,KAArB;AACA,UAAI4B,SAAS,GAAG,KAAKF,YAAL,CAAkBO,cAAlB,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BP,SAA/B;AACAlB,MAAAA,OAAO,CAACkB,SAAD,CAAP;AACA;AACH,KAXM,CAAP;AAYH,GApEa;;AAqEd;AACA;AACAS,EAAAA,YAAY,CAACC,QAAD,EAAW;AAAE,WAAO3C,QAAQ,CAAC2C,QAAD,EAAU;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAV,CAAf;AAA+C,GAvE1D;;AAyEd;AACAC,EAAAA,cAAc,GAAG;AAAE,SAAKxC,KAAL,GAAa,EAAb;AAAmB;;AA1ExB,CAAlB;AA8EAyC,MAAM,CAACC,OAAP,GAAiBzC,SAAjB","sourcesContent":["const { readdir,readFile } = require(\"fs\").promises;\r\nconst _path = require(\"path\");\r\nconst SUPPORTED_TYPES = { \".js\":\"javascript\",\".html\":\"html\",\".css\":\"css\",\".json\":\"json\" };\r\nlet nodes = {};\r\n\r\nconst Directory = {\r\n    nodes,\r\n    async readDirectory(current_node) {\r\n        let children;\r\n        try {\r\n            children = await readdir(current_node);\r\n        }\r\n        catch(e) {\r\n            //node is a file.\r\n            //console.log(p+'___'+current_node);\r\n            return;\r\n        }\r\n        //console.log(\" current node \",current_node);\r\n        this.nodes[current_node] = children;\r\n        await Promise.all(\r\n            children.map(async child => {\r\n            await this.readDirectory(_path.resolve(current_node,child));\r\n            })\r\n        );\r\n    },\r\n    dirFormat(grandChildren,parent_node) {\r\n        return {\r\n            children:grandChildren,\r\n            numOfChildren:Object.keys(grandChildren).length,\r\n            isdir:true,\r\n            path:parent_node,\r\n            isExpanded:false\r\n         }\r\n    },\r\n    fileFormat(parent_node,child) {\r\n        return {\r\n            isdir:false,\r\n            path:parent_node,\r\n            fileType:SUPPORTED_TYPES[_path.extname(child)],\r\n            sourceCode:'',\r\n            open:false\r\n        }\r\n    },\r\n    mapDirectory(parent_node) {\r\n        //console.log(\" parent \",parent_node)\r\n        let directChildren = this.nodes[parent_node];\r\n        let directory = {};\r\n        for (let child of directChildren) { \r\n            let f = _path.resolve(parent_node,child).replace(' ','');\r\n            //console.log(Object.keys(this.nodes));\r\n            if (this.nodes[f] != undefined) {\r\n                directory[child]  = this.dirFormat(this.mapDirectory(f),parent_node)\r\n            }\r\n            else {\r\n                directory[child] = this.fileFormat(parent_node,child)\r\n            }\r\n        }\r\n        return directory;\r\n    },\r\n    //functionality for updating the directory path.\r\n    openDirectory(directory_path) {\r\n        return new Promise(async resolve => {\r\n            try {\r\n                await this.readDirectory(directory_path);\r\n            }\r\n            catch(e) {}\r\n            console.log(\" current nodes \",this.nodes);\r\n            window.nodes  = this.nodes;\r\n            let directory = this.mapDirectory(directory_path);\r\n            console.log(\" directory  map \",directory);\r\n            resolve(directory);\r\n            return;\r\n        })\r\n    },\r\n    //functionality for reading code from a file.\r\n    //this functionality returns the file's source code in 'utf-8' encoding .\r\n    readFromFile(filepath) { return readFile(filepath,{encoding:'utf-8'})  },\r\n\r\n    //closed directory.\r\n    closeDirectory() { this.nodes = {};  }\r\n\r\n}\r\n\r\nmodule.exports = Directory;"],"file":"directory.js"}